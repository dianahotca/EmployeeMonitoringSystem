<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EmployeeMonitoringDataSet" targetNamespace="http://tempuri.org/EmployeeMonitoringDataSet.xsd" xmlns:mstns="http://tempuri.org/EmployeeMonitoringDataSet.xsd" xmlns="http://tempuri.org/EmployeeMonitoringDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EmployeeMonitoringConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EmployeeMonitoringConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Persistence.Properties.Settings.GlobalReference.Default.EmployeeMonitoringConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AssignmentsTableAdapter" GeneratorDataComponentClassName="AssignmentsTableAdapter" Name="Assignments" UserDataComponentName="AssignmentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EmployeeMonitoringConnectionString (Settings)" DbObjectName="EmployeeMonitoring.dbo.Assignments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Assignments] WHERE (([task_id] = @Original_task_id) AND ([assigned_to] = @Original_assigned_to) AND ([assigned_by] = @Original_assigned_by) AND ([task_status] = @Original_task_status))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_task_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_assigned_to" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_to" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_assigned_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_by" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Assignments] ([task_id], [assigned_to], [assigned_by], [task_status]) VALUES (@task_id, @assigned_to, @assigned_by, @task_status);
SELECT task_id, assigned_to, assigned_by, task_status FROM Assignments WHERE (assigned_by = @assigned_by) AND (assigned_to = @assigned_to) AND (task_id = @task_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@task_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@assigned_to" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_to" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@assigned_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_by" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT task_id, assigned_to, assigned_by, task_status FROM dbo.Assignments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Assignments] SET [task_id] = @task_id, [assigned_to] = @assigned_to, [assigned_by] = @assigned_by, [task_status] = @task_status WHERE (([task_id] = @Original_task_id) AND ([assigned_to] = @Original_assigned_to) AND ([assigned_by] = @Original_assigned_by) AND ([task_status] = @Original_task_status));
SELECT task_id, assigned_to, assigned_by, task_status FROM Assignments WHERE (assigned_by = @assigned_by) AND (assigned_to = @assigned_to) AND (task_id = @task_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@task_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@assigned_to" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_to" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@assigned_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_by" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_task_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_assigned_to" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_to" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_assigned_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="assigned_by" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="task_id" DataSetColumn="task_id" />
              <Mapping SourceColumn="assigned_to" DataSetColumn="assigned_to" />
              <Mapping SourceColumn="assigned_by" DataSetColumn="assigned_by" />
              <Mapping SourceColumn="task_status" DataSetColumn="task_status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BossesTableAdapter" GeneratorDataComponentClassName="BossesTableAdapter" Name="Bosses" UserDataComponentName="BossesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EmployeeMonitoringConnectionString (Settings)" DbObjectName="EmployeeMonitoring.dbo.Bosses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Bosses] WHERE (([email] = @Original_email) AND ([boss_name] = @Original_boss_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_boss_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="boss_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Bosses] ([email], [boss_name]) VALUES (@email, @boss_name);
SELECT email, boss_name FROM Bosses WHERE (email = @email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@boss_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="boss_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT email, boss_name FROM dbo.Bosses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Bosses] SET [email] = @email, [boss_name] = @boss_name WHERE (([email] = @Original_email) AND ([boss_name] = @Original_boss_name));
SELECT email, boss_name FROM Bosses WHERE (email = @email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@boss_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="boss_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_boss_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="boss_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="boss_name" DataSetColumn="boss_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeesTableAdapter" GeneratorDataComponentClassName="EmployeesTableAdapter" Name="Employees" UserDataComponentName="EmployeesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EmployeeMonitoringConnectionString (Settings)" DbObjectName="EmployeeMonitoring.dbo.Employees" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Employees] WHERE (([email] = @Original_email) AND ([employee_name] = @Original_employee_name) AND ((@IsNull_department = 1 AND [department] IS NULL) OR ([department] = @Original_department)) AND ((@IsNull_log_in_time = 1 AND [log_in_time] IS NULL) OR ([log_in_time] = @Original_log_in_time)) AND ((@IsNull_salary = 1 AND [salary] IS NULL) OR ([salary] = @Original_salary)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_department" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="department" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="department" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_log_in_time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="log_in_time" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_log_in_time" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="log_in_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employees] ([email], [employee_name], [department], [log_in_time], [salary]) VALUES (@email, @employee_name, @department, @log_in_time, @salary);
SELECT email, employee_name, department, log_in_time, salary FROM Employees WHERE (email = @email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="department" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@log_in_time" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="log_in_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT email, employee_name, department, log_in_time, salary FROM dbo.Employees</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Employees] SET [email] = @email, [employee_name] = @employee_name, [department] = @department, [log_in_time] = @log_in_time, [salary] = @salary WHERE (([email] = @Original_email) AND ([employee_name] = @Original_employee_name) AND ((@IsNull_department = 1 AND [department] IS NULL) OR ([department] = @Original_department)) AND ((@IsNull_log_in_time = 1 AND [log_in_time] IS NULL) OR ([log_in_time] = @Original_log_in_time)) AND ((@IsNull_salary = 1 AND [salary] IS NULL) OR ([salary] = @Original_salary)));
SELECT email, employee_name, department, log_in_time, salary FROM Employees WHERE (email = @email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="department" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@log_in_time" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="log_in_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_employee_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="employee_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_department" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="department" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_department" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="department" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_log_in_time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="log_in_time" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_log_in_time" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="log_in_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="employee_name" DataSetColumn="employee_name" />
              <Mapping SourceColumn="department" DataSetColumn="department" />
              <Mapping SourceColumn="log_in_time" DataSetColumn="log_in_time" />
              <Mapping SourceColumn="salary" DataSetColumn="salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TasksTableAdapter" GeneratorDataComponentClassName="TasksTableAdapter" Name="Tasks" UserDataComponentName="TasksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EmployeeMonitoringConnectionString (Settings)" DbObjectName="EmployeeMonitoring.dbo.Tasks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tasks] WHERE (([task_id] = @Original_task_id) AND ([task_name] = @Original_task_name) AND ((@IsNull_task_description = 1 AND [task_description] IS NULL) OR ([task_description] = @Original_task_description)) AND ((@IsNull_due_date = 1 AND [due_date] IS NULL) OR ([due_date] = @Original_due_date)) AND ([task_status] = @Original_task_status))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_task_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_task_description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_due_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="due_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_due_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="due_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tasks] ([task_name], [task_description], [due_date], [task_status]) VALUES (@task_name, @task_description, @due_date, @task_status);
SELECT task_id, task_name, task_description, due_date, task_status FROM Tasks WHERE (task_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@due_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="due_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT task_id, task_name, task_description, due_date, task_status FROM dbo.Tasks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tasks] SET [task_name] = @task_name, [task_description] = @task_description, [due_date] = @due_date, [task_status] = @task_status WHERE (([task_id] = @Original_task_id) AND ([task_name] = @Original_task_name) AND ((@IsNull_task_description = 1 AND [task_description] IS NULL) OR ([task_description] = @Original_task_description)) AND ((@IsNull_due_date = 1 AND [due_date] IS NULL) OR ([due_date] = @Original_due_date)) AND ([task_status] = @Original_task_status));
SELECT task_id, task_name, task_description, due_date, task_status FROM Tasks WHERE (task_id = @task_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@due_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="due_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_task_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_task_description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="task_description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_due_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="due_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_due_date" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="due_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_task_status" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="task_status" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="task_id" ColumnName="task_id" DataSourceName="EmployeeMonitoring.dbo.Tasks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@task_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="task_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="task_id" DataSetColumn="task_id" />
              <Mapping SourceColumn="task_name" DataSetColumn="task_name" />
              <Mapping SourceColumn="task_description" DataSetColumn="task_description" />
              <Mapping SourceColumn="due_date" DataSetColumn="due_date" />
              <Mapping SourceColumn="task_status" DataSetColumn="task_status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EmployeeMonitoringConnectionString (Settings)" DbObjectName="EmployeeMonitoring.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([username] = @Original_username) AND ([user_pasword] = @Original_user_pasword))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_pasword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([username], [user_pasword]) VALUES (@username, @user_pasword);
SELECT username, user_pasword FROM Users WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_pasword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT username, user_pasword FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [username] = @username, [user_pasword] = @user_pasword WHERE (([username] = @Original_username) AND ([user_pasword] = @Original_user_pasword));
SELECT username, user_pasword FROM Users WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_pasword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_pasword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="user_pasword" DataSetColumn="user_pasword" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EmployeeMonitoringDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="EmployeeMonitoringDataSet" msprop:Generator_DataSetName="EmployeeMonitoringDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Assignments" msprop:Generator_RowEvHandlerName="AssignmentsRowChangeEventHandler" msprop:Generator_RowDeletedName="AssignmentsRowDeleted" msprop:Generator_RowDeletingName="AssignmentsRowDeleting" msprop:Generator_RowEvArgName="AssignmentsRowChangeEvent" msprop:Generator_TablePropName="Assignments" msprop:Generator_RowChangedName="AssignmentsRowChanged" msprop:Generator_RowChangingName="AssignmentsRowChanging" msprop:Generator_TableClassName="AssignmentsDataTable" msprop:Generator_RowClassName="AssignmentsRow" msprop:Generator_TableVarName="tableAssignments" msprop:Generator_UserTableName="Assignments">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="task_id" msprop:Generator_ColumnPropNameInRow="task_id" msprop:Generator_ColumnPropNameInTable="task_idColumn" msprop:Generator_ColumnVarNameInTable="columntask_id" msprop:Generator_UserColumnName="task_id" type="xs:int" />
              <xs:element name="assigned_to" msprop:Generator_ColumnPropNameInRow="assigned_to" msprop:Generator_ColumnPropNameInTable="assigned_toColumn" msprop:Generator_ColumnVarNameInTable="columnassigned_to" msprop:Generator_UserColumnName="assigned_to">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="assigned_by" msprop:Generator_ColumnPropNameInRow="assigned_by" msprop:Generator_ColumnPropNameInTable="assigned_byColumn" msprop:Generator_ColumnVarNameInTable="columnassigned_by" msprop:Generator_UserColumnName="assigned_by">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="task_status" msprop:Generator_ColumnPropNameInRow="task_status" msprop:Generator_ColumnPropNameInTable="task_statusColumn" msprop:Generator_ColumnVarNameInTable="columntask_status" msprop:Generator_UserColumnName="task_status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Bosses" msprop:Generator_RowEvHandlerName="BossesRowChangeEventHandler" msprop:Generator_RowDeletedName="BossesRowDeleted" msprop:Generator_RowDeletingName="BossesRowDeleting" msprop:Generator_RowEvArgName="BossesRowChangeEvent" msprop:Generator_TablePropName="Bosses" msprop:Generator_RowChangedName="BossesRowChanged" msprop:Generator_RowChangingName="BossesRowChanging" msprop:Generator_TableClassName="BossesDataTable" msprop:Generator_RowClassName="BossesRow" msprop:Generator_TableVarName="tableBosses" msprop:Generator_UserTableName="Bosses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="email" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_UserColumnName="email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="boss_name" msprop:Generator_ColumnPropNameInRow="boss_name" msprop:Generator_ColumnPropNameInTable="boss_nameColumn" msprop:Generator_ColumnVarNameInTable="columnboss_name" msprop:Generator_UserColumnName="boss_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Employees" msprop:Generator_RowEvHandlerName="EmployeesRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeesRowDeleted" msprop:Generator_RowDeletingName="EmployeesRowDeleting" msprop:Generator_RowEvArgName="EmployeesRowChangeEvent" msprop:Generator_TablePropName="Employees" msprop:Generator_RowChangedName="EmployeesRowChanged" msprop:Generator_RowChangingName="EmployeesRowChanging" msprop:Generator_TableClassName="EmployeesDataTable" msprop:Generator_RowClassName="EmployeesRow" msprop:Generator_TableVarName="tableEmployees" msprop:Generator_UserTableName="Employees">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="email" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_UserColumnName="email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="employee_name" msprop:Generator_ColumnPropNameInRow="employee_name" msprop:Generator_ColumnPropNameInTable="employee_nameColumn" msprop:Generator_ColumnVarNameInTable="columnemployee_name" msprop:Generator_UserColumnName="employee_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="department" msprop:Generator_ColumnPropNameInRow="department" msprop:Generator_ColumnPropNameInTable="departmentColumn" msprop:Generator_ColumnVarNameInTable="columndepartment" msprop:Generator_UserColumnName="department" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="log_in_time" msprop:Generator_ColumnPropNameInRow="log_in_time" msprop:Generator_ColumnPropNameInTable="log_in_timeColumn" msprop:Generator_ColumnVarNameInTable="columnlog_in_time" msprop:Generator_UserColumnName="log_in_time" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="salary" msprop:Generator_ColumnPropNameInRow="salary" msprop:Generator_ColumnPropNameInTable="salaryColumn" msprop:Generator_ColumnVarNameInTable="columnsalary" msprop:Generator_UserColumnName="salary" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tasks" msprop:Generator_RowEvHandlerName="TasksRowChangeEventHandler" msprop:Generator_RowDeletedName="TasksRowDeleted" msprop:Generator_RowDeletingName="TasksRowDeleting" msprop:Generator_RowEvArgName="TasksRowChangeEvent" msprop:Generator_TablePropName="Tasks" msprop:Generator_RowChangedName="TasksRowChanged" msprop:Generator_RowChangingName="TasksRowChanging" msprop:Generator_TableClassName="TasksDataTable" msprop:Generator_RowClassName="TasksRow" msprop:Generator_TableVarName="tableTasks" msprop:Generator_UserTableName="Tasks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="task_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="task_id" msprop:Generator_ColumnPropNameInTable="task_idColumn" msprop:Generator_ColumnVarNameInTable="columntask_id" msprop:Generator_UserColumnName="task_id" type="xs:int" />
              <xs:element name="task_name" msprop:Generator_ColumnPropNameInRow="task_name" msprop:Generator_ColumnPropNameInTable="task_nameColumn" msprop:Generator_ColumnVarNameInTable="columntask_name" msprop:Generator_UserColumnName="task_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="task_description" msprop:Generator_ColumnPropNameInRow="task_description" msprop:Generator_ColumnPropNameInTable="task_descriptionColumn" msprop:Generator_ColumnVarNameInTable="columntask_description" msprop:Generator_UserColumnName="task_description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="due_date" msprop:Generator_ColumnPropNameInRow="due_date" msprop:Generator_ColumnPropNameInTable="due_dateColumn" msprop:Generator_ColumnVarNameInTable="columndue_date" msprop:Generator_UserColumnName="due_date" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="task_status" msprop:Generator_ColumnPropNameInRow="task_status" msprop:Generator_ColumnPropNameInTable="task_statusColumn" msprop:Generator_ColumnVarNameInTable="columntask_status" msprop:Generator_UserColumnName="task_status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_TablePropName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_RowClassName="UsersRow" msprop:Generator_TableVarName="tableUsers" msprop:Generator_UserTableName="Users">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="username" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="user_pasword" msprop:Generator_ColumnPropNameInRow="user_pasword" msprop:Generator_ColumnPropNameInTable="user_paswordColumn" msprop:Generator_ColumnVarNameInTable="columnuser_pasword" msprop:Generator_UserColumnName="user_pasword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Assignments" />
      <xs:field xpath="mstns:task_id" />
      <xs:field xpath="mstns:assigned_to" />
      <xs:field xpath="mstns:assigned_by" />
    </xs:unique>
    <xs:unique name="Bosses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Bosses" />
      <xs:field xpath="mstns:email" />
    </xs:unique>
    <xs:unique name="Employees_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employees" />
      <xs:field xpath="mstns:email" />
    </xs:unique>
    <xs:unique name="Tasks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tasks" />
      <xs:field xpath="mstns:task_id" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:username" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_bosses_assignments" msdata:parent="Bosses" msdata:child="Assignments" msdata:parentkey="email" msdata:childkey="assigned_by" msprop:Generator_UserParentTable="Bosses" msprop:Generator_UserChildTable="Assignments" msprop:Generator_RelationVarName="relationfk_bosses_assignments" msprop:Generator_UserRelationName="fk_bosses_assignments" msprop:Generator_ChildPropName="GetAssignmentsRows" msprop:Generator_ParentPropName="BossesRow" />
      <msdata:Relationship name="fk_employees_assignments" msdata:parent="Employees" msdata:child="Assignments" msdata:parentkey="email" msdata:childkey="assigned_to" msprop:Generator_UserParentTable="Employees" msprop:Generator_UserChildTable="Assignments" msprop:Generator_RelationVarName="relationfk_employees_assignments" msprop:Generator_UserRelationName="fk_employees_assignments" msprop:Generator_ChildPropName="GetAssignmentsRows" msprop:Generator_ParentPropName="EmployeesRow" />
      <msdata:Relationship name="fk_tasks" msdata:parent="Tasks" msdata:child="Assignments" msdata:parentkey="task_id" msdata:childkey="task_id" msprop:Generator_UserParentTable="Tasks" msprop:Generator_UserChildTable="Assignments" msprop:Generator_RelationVarName="relationfk_tasks" msprop:Generator_UserRelationName="fk_tasks" msprop:Generator_ChildPropName="GetAssignmentsRows" msprop:Generator_ParentPropName="TasksRow" />
      <msdata:Relationship name="fk_bosses" msdata:parent="Users" msdata:child="Bosses" msdata:parentkey="username" msdata:childkey="email" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="Bosses" msprop:Generator_RelationVarName="relationfk_bosses" msprop:Generator_UserRelationName="fk_bosses" msprop:Generator_ChildPropName="GetBossesRows" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="fk_employees" msdata:parent="Users" msdata:child="Employees" msdata:parentkey="username" msdata:childkey="email" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="Employees" msprop:Generator_RelationVarName="relationfk_employees" msprop:Generator_UserRelationName="fk_employees" msprop:Generator_ChildPropName="GetEmployeesRows" msprop:Generator_ParentPropName="UsersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>